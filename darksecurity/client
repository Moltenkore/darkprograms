--Title: Dark Client
Version = 3.6
--Author: Darkrising (minecraft name djhannz)
--Platform: ComputerCraft Lua Virtual Machine
AutoUpdate = true
if fs.exists("dark") == false then -- load darkAPI
  print("Missing DarkAPI")
  sleep(2)
  print("Attempting to download...")
  getGit = http.get("https://github.com/darkrising/darkprograms/raw/darkprograms/darksecurity/dark")
  getGit = getGit.readAll()
  file = fs.open("dark", "w")
  file.write(getGit)
  file.close()
  os.reboot()
else
  os.loadAPI("dark")
end
function Header(text)
  dark.printL("-", 1)
  dark.printC(text, 2)
  dark.printL("-", 3)
  term.setCursorPos(1,4)
end
function keycard_mainProgram()
  while true do
    event, eventinfo, extrainfo = os.pullEvent("disk") --waiting for a disk.
    if disk.hasData(eventinfo) == true then
      dID = tostring(disk.getDiskID(eventinfo)) -- Get disk's id      
      rednet.send(server, "QUERY#"..dID) -- send disk's id to server
      S, M = rednet.receive(2) -- get servers response
      if M == "#GRANTED#" then -- if accepted opens door
        disk.eject(eventinfo)
        rs.setOutput(doorside, true)
        sleep(2.5)
        rs.setOutput(doorside, false)
      end
      disk.eject(eventinfo)
    else
      disk.eject(eventinfo)
    end
  end
end
function userandpassword_mainProgram()
  while true do
    term.clear() term.setCursorPos(1,1)
    Header(terminalLabel)
    print("") print("")
    write("User: ") status, User = pcall(read)
    write("Password: ") status, password = pcall(read, "*")
    if ((User ~= nil) and (password ~= nil)) then
      rednet.send(server, "PASSQUERY#"..User.."#"..password)
      ID, MES = rednet.receive(2)
      if MES == nil then
      print("\nNo response from server!")
      sleep(2)
      else
        if MES == "#GRANTED#" then
          dark.printC("Correct", 4, 4)
          rs.setOutput(doorside, true)
          sleep(2.5)
          rs.setOutput(doorside, false)
        else
          print("")
          dark.printC("Incorrect", 4, 4)
          sleep(1)
        end
      end
    end
  end
end

S = dark.findPeripheral("modem")
if S == false then
  print("Please attach Modem") 
  return exit
else
  rednet.open(S)  
end
function stealthUpdate()
  if AutoUpdate == true then 
    if ((dark.gitUpdate("client", shell.getRunningProgram(), Version) == true) or (dark.gitUpdate("dark", "dark", dark.DARKversion) == true)) then
      os.reboot()
    end
  end
end
if fs.exists("DarkC_conf") == false then
  term.clear()
  term.setCursorPos(1,1)
  Header("Dark Client Setup")
  write("Please type the server / relay id: ")
  ServerID = io.read()
  write("Which side do I output redstone? (Door side?) ")
  DoorSide = io.read()
  print("What is the 'label' of this terminal? (eg. Workshop, smelting room etc)" )
  TLabel = io.read()  
  
  local file = io.open("DarkC_conf","w")
  file:write("server = "..ServerID.." doorside = "..[["]]..DoorSide..[["]].." terminalLabel = "..[["]]..TLabel..[["]])
  file:close()
  
  print("\nsetup complete! Restarting...")
  sleep(1.5)
  os.reboot()
  dofile("DarkC_conf")
else
  dofile("DarkC_conf")
end
parallel.waitForAll(keycard_mainProgram, userandpassword_mainProgram, stealthUpdate) -- runs keycard function and user function at the same time